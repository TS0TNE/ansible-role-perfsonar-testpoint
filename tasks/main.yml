---
# tasks file for perfsonar-testpoint

# Load OS dependant variables
- name: Load variables based on the OS type
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution }}.yml"
    - "{{ ansible_os_family }}.yml"
  tags: 'ps::config'

# Setup the required repositories
- name: Add EPEL repository (RedHat based systems)
  yum:
    name: epel-release
    state: latest
  when: ansible_os_family == "RedHat"
  tags: 'ps::install'

- name: Add perfSONAR repository (RedHat based systems)
  yum:
    name: http://software.internet2.edu/rpms/el7/x86_64/main/RPMS/perfSONAR-repo-0.8-1.noarch.rpm
    state: present
  when: ansible_os_family == "RedHat"
  tags: 'ps::install'

- name: Import perfSONAR repository signing key (Debian based systems)
  apt_key:
    url: http://downloads.perfsonar.net/debian/perfsonar-debian-official.gpg.key
    state: present
  when: ansible_os_family == "Debian"
  tags: 'ps::install'

- name: Add perfSONAR repository (Debian based systems)
  apt_repository:
    repo: deb http://downloads.perfsonar.net/debian/ perfsonar-jessie-{{ perfsonar_release }} main
    state: present
  when: ansible_os_family == "Debian"
  tags: 'ps::install'

# Make sure we have the latest upgrades installed
- name: Install system updates (RedHat based systems)
  yum:
    name: '*'
    state: latest
    update_cache: yes
  ignore_errors: True
  when: ansible_os_family == "RedHat"
  tags: 'ps::install'

- name: Install system updates (Debian based systems)
  apt:
    upgrade: dist
    update_cache: yes
  ignore_errors: True
  when: ansible_os_family == "Debian"
  tags: 'ps::install'

# Install the perfsonar-testpoint bundle and any other optional perfsonar package
- name: Install perfSONAR testpoint
  package:
    name: perfsonar-testpoint
    state: present
  tags: 'ps::install'

- name: Install perfSONAR optional packages
  package:
    name: "{{ item }}"
    state: present
  with_items: "{{ perfsonar_optional_packages }}"
  tags: 'ps::install'

# Remove any conflictuous configuration
- name: Make sure FQDN is not pointing to any localhost entry in /etc/hosts
  lineinfile:
    path: /etc/hosts
    state: 'absent'
    regexp: '127.0..*{{ ansible_fqdn }}'
  tags: 'ps::preconfig'

# Configure services
- name: Configure additional NTP servers
  lineinfile:
    path: /etc/ntp.conf
    line: "server {{ item }} iburst"
  with_items: "{{ perfsonar_ntp_servers }}"
  tags: 'ps::config'
  notify:
    - restart ntp

- name: Disable ssh root access
  lineinfile:
    state: present
    path: /etc/ssh/sshd_config
    regexp: "^PermitRootLogin"
    line: "PermitRootLogin no"
  when: perfsonar_disable_root_ssh
  tags: 'ps::config'
  notify:
    - restart ssh

# Make sure services are running

# Run a few useful perfSONAR commands

